// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid()) @db.Uuid
  login     String
  password  String
  version   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artist {
  id     String  @id @default(uuid()) @db.Uuid
  name   String
  grammy Boolean

  tracks Track[] @relation("ArtistTracks")
  albums Album[] @relation("ArtistAlbums")
}

model Album {
  id       String  @id @default(uuid()) @db.Uuid
  name     String
  year     Int
  artistId String? @db.Uuid

  artist Artist? @relation("ArtistAlbums", fields: [artistId], references: [id])
  tracks Track[] @relation("AlbumTracks")
}

model Track {
  id       String  @id @default(uuid()) @db.Uuid
  name     String
  artistId String? @db.Uuid
  albumId  String? @db.Uuid
  duration Int

  artist Artist? @relation("ArtistTracks", fields: [artistId], references: [id])
  album  Album?  @relation("AlbumTracks", fields: [albumId], references: [id])
}

model Favourites {
  artists String[] @unique() @default([])
  albums  String[] @unique() @default([])
  tracks  String[] @unique() @default([])
}
